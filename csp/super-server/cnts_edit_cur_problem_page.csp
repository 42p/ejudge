<% /* -*- html -*- */
%><%@include "includes.csp"
%><%
#include "ejudge/meta/prepare_meta.h"
%><%@set getter_name = "csp_get_cnts_edit_cur_problem_page"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@set err_prefix = "SSERV_ERR_"
%><%@page csp_view_cnts_edit_cur_problem_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    unsigned char subtitle_buf[1024];
    const unsigned char *title = 0;
    const unsigned char *subtitle = subtitle_buf;
    opcap_t caps = 0;
    int row = 1;
    int cur_page = 4;
    int i;
    int prob_id = 0;
    const struct section_problem_data *prob = NULL;
    struct section_problem_data *tmp_prob = NULL;
    const struct section_problem_data *sup_prob = 0;
    int sup_id = 0, prob_type = 0;
    const unsigned char *str_value = NULL;
    int value;

static const unsigned char head_row_attr[] =
  " bgcolor=\"#a0a0a0\"";
static const unsigned char * const form_row_attrs[]=
{
  " bgcolor=\"#d0d0d0\"",
  " bgcolor=\"#e0e0e0\"",
};

    if (phr->priv_level != PRIV_LEVEL_ADMIN) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (ejudge_cfg_opcaps_find(phr->config, phr->login, &caps) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (opcaps_check(caps, OPCAP_EDIT_CONTEST) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (!phr->ss->edited_cnts) FAIL(SSERV_ERR_CONTEST_NOT_EDITED);

%><s:read var="prob_id" required="yes" /><%

    if (prob_id <= 0) {
        i = -prob_id;
        if (i >= phr->ss->aprob_u) FAIL(SSERV_ERR_INVALID_PARAMETER);
        prob = phr->ss->aprobs[i];
        if (!prob) FAIL(SSERV_ERR_INVALID_PARAMETER);
        snprintf(subtitle_buf, sizeof(subtitle_buf), "editing serve.cfg, problem %s", prob->short_name);
    } else {
        i = prob_id;
        if (i >= phr->ss->prob_a) FAIL(SSERV_ERR_INVALID_PARAMETER);
        prob = phr->ss->probs[i];
        if (!prob) FAIL(SSERV_ERR_INVALID_PARAMETER);
        snprintf(subtitle_buf, sizeof(subtitle_buf), "editing serve.cfg, problem %d", i);

        int j;
        if (prob->super && prob->super[0]) {
            for (j = 0; j < phr->ss->aprob_u; ++j) {
                if (!strcmp(prob->super, phr->ss->aprobs[j]->short_name)) {
                    sup_prob = phr->ss->aprobs[j];
                    sup_id = j + 1;
                    break;
                }
            }
        }
    }
    tmp_prob = prepare_copy_problem(prob);

    cnts = phr->ss->edited_cnts;
    struct section_global_data *global = phr->ss->global;

    (void) row;
    (void) head_row_attr;
    (void) form_row_attrs;

    (void) sup_id;
    (void) sup_prob;
%><%@include "header_jqgrid.csp"
%>

<%@include "cnts_edit_cur_top_menu.csp"
%>

<%
  if (phr->ss->serve_parse_errors) {
%>
<h2><tt>serve.cfg</tt> cannot be edited</h2>
<font color="red"><pre><s:v value="phr->ss->serve_parse_errors" /></pre></font>
<%
    goto bottom_links;
  }
%>

<%
  if (!global) {
%>
<h2>No current global settings!</h2>
<%
    goto bottom_links;
  }
%>

<h2><%
    if (prob_id <= 0) {
%>Abstract problem <%
    } else {
%>Problem <%
    }
%><s:v value="i" /><%
    if (prob->short_name && prob->short_name[0]) {
%>, <s:v value="prob->short_name" /><%
    }
%><%
    if (prob->internal_name && prob->internal_name[0]) {
%>, <s:v value="prob->internal_name" /><%
    }
%><%
    if (prob->long_name && prob->long_name[0]) {
%>, <s:v value="prob->long_name" /><%
    }
%></h2>

<script type="text/javascript">
$(function() {
    $('#ProblemAccordion').accordion({ heightStyle: "content" });
});
</script>

<div id="ProblemAccordion">
    <h3>Problem identification</h3>
    <div>
        <table border="0" onclick="popupMainDialog()">

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-id-div">
                <td>ID:</td>
                <td><s:textfield id="orig-id" readonly="readonly" name="param" value="prob->id" size="48" maxlength="1024" check="false" /></td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-short_name-div">
                <td>Short name:</td>
                <td><s:textfield id="orig-short_name" readonly="readonly" name="param" value="prob->short_name" size="48" maxlength="1024" check="no" /><% if (!prob->short_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupMainDialog(event, 'short_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:short_name" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-internal_name-div">
                <td>Internal name:</td>
                <td><s:textfield id="orig-internal_name" readonly="readonly" name="param" value="prob->internal_name" size="48" maxlength="1024" check="no" /><% if (!prob->internal_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupMainDialog(event, 'internal_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:internal_name" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-long_name-div">
                <td>Long name:</td>
                <td><s:textfield id="orig-long_name" readonly="readonly" name="param" value="prob->long_name" size="48" maxlength="1024" check="no" /><% if (!prob->long_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupMainDialog(event, 'long_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:long_name" /></td>
            </s:tr>

<%
    str_value = NULL;
    if (sup_prob && sup_prob->short_name && sup_prob->short_name[0]) {
        str_value = sup_prob->short_name;
    }
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-super-div">
                <td>Base abstract problem:</td>
                <td><s:textfield id="orig-super" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><% if (!str_value) { %>(<i>Not set</i>)<% } %></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:super" /></td>
            </s:tr>

<%
    prob_type = prob->type;
    if (prob_type < 0 || prob_type >= PROB_TYPE_LAST) prob_type = 0;
    str_value = problem_unparse_type(prob_type);
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-type-div">
                <td>Type:</td>
                <td><s:textfield id="orig-type" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><% if (!str_value) { %>(<i>Not set</i>)<% } %></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:type" /></td>
            </s:tr>

        </table>
    </div>

    <h3>Files and directories</h3>

    <div>
        <table border="0" onclick="popupFilesDialog()">

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-binary_input-div">
                <td>Input data is binary?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = prob->binary_input == 1;
%><s:yesno id="orig-binary_input" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_binary_input, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-binary_input" readonly="readonly" name="param" value="prob->binary_input" default="tmp_prob->binary_input" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:binary_input" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-normalization-div">
                <td>Test normalization mode:</td>
                <td><s:hidden id="orig-normalization" name="param" value="prob->normalization" /><%
    value = test_normalization_parse(prob->normalization);
    if (value < 0) value = TEST_NORM_DEFAULT;
    if (prob_id <= 0 || !sup_prob) {
      if (value == TEST_NORM_DEFAULT) value = TEST_NORM_NL;
%><s:v value="test_normalization_unparse_full(value)" escape="false" /><%
    } else if (value == TEST_NORM_DEFAULT) {
      value = test_normalization_parse(sup_prob->normalization);
      if (value < 0) value = TEST_NORM_NL;
      if (value == TEST_NORM_DEFAULT) value = TEST_NORM_NL;
%>Default (<s:v value="test_normalization_unparse_full(value)" escape="false" />)<%
    } else {
%><s:v value="test_normalization_unparse_full(value)" escape="false" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:normalization" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-xml_file-div">
                <td>XML File with problem statement:</td>
                <td><%
  str_value = prob->xml_file;
  if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield id="orig-xml_file" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
  if (prob_id <= 0) {
%><% if (!str_value) { %>(<i>Not set</i>)<% } %><%
  } else if (!sup_prob) {
    prepare_set_prob_value(CNTSPROB_xml_file, tmp_prob, sup_prob, global);
    if (!str_value) {
%>(<i>Not set</i>)<%
    } else {
%>(<i><s:v value="tmp_prob->xml_file" /></i>)<%
    }
  } else {
    prepare_set_prob_value(CNTSPROB_xml_file, tmp_prob, sup_prob, global);
    if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->xml_file" /></i>)<%
    } else {
%>(<i><s:v value="tmp_prob->xml_file" /></i>)<%
    }
  }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'xml_file')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:xml_file" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_dir-div">
                <td>Directory with tests:</td>
                <td><%
    str_value = prob->test_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield id="orig-test_dir" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value || !sup_prob) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_test_dir, tmp_prob, sup_prob, global);
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->test_dir" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'test_dir')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_dir" /></td>
            </s:tr>

<%
  if (prob_id > 0) {
    prepare_set_prob_value(CNTSPROB_test_sfx, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_test_pat, tmp_prob, sup_prob, global);
  }
%>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_pat-div">
                <td>Pattern for test file names:</td>
                <td><%
    str_value = prob->test_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-test_pat" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_pat" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'test_pat')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_pat" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_sfx-div">
              <td>Suffix of test files:</td>
              <td><%
    str_value = prob->test_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-test_sfx" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_sfx" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'test_sfx')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_sfx" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-use_corr-div">
                <td>Use &quot;correct answer&quot; files for check?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = (prob->use_corr > 0);
%><s:yesno id="orig-use_corr" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_corr, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-use_corr" readonly="readonly" name="param" value="prob->use_corr" default="tmp_prob->use_corr" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:use_corr" /></td>
            </s:tr>


            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-corr_dir-div">
                <td>Directory with &quot;correct answer&quot; files:</td>
                <td><%
    str_value = prob->corr_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield id="orig-corr_dir" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0 || !sup_prob) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_corr_dir, tmp_prob, sup_prob, global);
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->corr_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->corr_dir" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'corr_dir')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:corr_dir" /></td>
            </s:tr>

<%
  if (prob_id > 0) {
    prepare_set_prob_value(CNTSPROB_corr_sfx, tmp_prob, sup_prob, global);
    prepare_set_prob_value(CNTSPROB_corr_pat, tmp_prob, sup_prob, global);
  }
%>



        </table>
    </div>

    <h3>Submission</h3>

    <div>
        <table border="0" onclick="popupSubmissionDialog()">

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-binary-div">
                <td>Submit is binary?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = prob->binary == 1;
%><s:yesno id="orig-binary" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_binary, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-binary" readonly="readonly" name="param" value="prob->binary" default="tmp_prob->binary" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:binary" /></td>
            </s:tr>


        </table>
    </div>

    <h3>Checking</h3>

    <div>
        <table border="0" onclick="popupCheckingDialog()">

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-manual_checking-div">
                <td>Problem is checked manually?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = (prob->manual_checking > 0);
%><s:yesno id="orig-manual_checking" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_manual_checking, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-manual_checking" readonly="readonly" name="param" value="prob->manual_checking" default="tmp_prob->manual_checking" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:manual_checking" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-check_presentation-div">
                <td>Check output presentation anyway?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = (prob->check_presentation > 0);
%><s:yesno id="orig-check_presentation" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_check_presentation, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-check_presentation" readonly="readonly" name="param" value="prob->check_presentation" default="tmp_prob->check_presentation" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:check_presentation" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-use_stdin-div">
                <td>Use standard input?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = prob->use_stdin;
%><s:yesno id="orig-use_stdin" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_stdin, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-use_stdin" readonly="readonly" name="param" value="prob->use_stdin" default="tmp_prob->use_stdin" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:use_stdin" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-combined_stdin-div">
                <td>Combined standard/file input?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = prob->combined_stdin;
%><s:yesno id="orig-combined_stdin" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_combined_stdin, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-combined_stdin" readonly="readonly" name="param" value="prob->combined_stdin" default="tmp_prob->combined_stdin" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:combined_stdin" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-input_file-div">
                <td>Input file name:</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      const unsigned char *value = prob->input_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-input_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Not set</i>)<% } %><%
    } else {
      prepare_set_prob_value(CNTSPROB_input_file, tmp_prob, sup_prob, global);
      const unsigned char *value = prob->input_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-input_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Default</i>: <i><s:v value="tmp_prob->input_file" /></i>)<% } %><%
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'input_file')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:input_file" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-use_stdout-div">
                <td>Use standard output?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = prob->use_stdout;
%><s:yesno id="orig-use_stdout" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_use_stdout, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-use_stdout" readonly="readonly" name="param" value="prob->use_stdout" default="tmp_prob->use_stdout" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:use_stdout" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-combined_stdout-div">
                <td>Combined standard/file output?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = prob->combined_stdout;
%><s:yesno id="orig-combined_stdout" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_combined_stdout, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-combined_stdout" readonly="readonly" name="param" value="prob->combined_stdout" default="tmp_prob->combined_stdout" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:combined_stdout" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-output_file-div">
                <td>Output file name:</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      const unsigned char *value = prob->output_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-output_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Not set</i>)<% } %><%
    } else {
      prepare_set_prob_value(CNTSPROB_output_file, tmp_prob, sup_prob, global);
      const unsigned char *value = prob->output_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-output_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Default</i>: <i><s:v value="tmp_prob->output_file" /></i>)<% } %><%
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'output_file')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:output_file" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-disable_stderr-div">
                <td>Consider output to stderr as PE?</td>
                <td><%
    if (prob_id <= 0 || !sup_prob) {
      int value = prob->disable_stderr == 1;
%><s:yesno id="orig-disable_stderr" readonly="readonly" name="param" value="value" /><%
    } else {
      prepare_set_prob_value(CNTSPROB_disable_stderr, tmp_prob, sup_prob, global);
%><s:yesno3 id="orig-disable_stderr" readonly="readonly" name="param" value="prob->disable_stderr" default="tmp_prob->disable_stderr" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:disable_stderr" /></td>
            </s:tr>



        </table>
    </div>

    <h3>Limits</h3>

    <div>
        <table border="0" onclick="popupLimitsDialog()">
        </table>
    </div>

    <h3>Standings</h3>

    <div>
        <table border="0" onclick="popupStandingsDialog()">
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-stand_name-div">
                <td>Title for the standings column:</td>
                <td><s:textfield id="orig-stand_name" readonly="readonly" name="param" value="prob->stand_name" size="48" maxlength="1024" check="no" /><% if (!prob->stand_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupStandingsDialog(event, 'stand_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:stand_name" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-stand_column-div">
                <td>Collate this problem with the specified one:</td>
                <td><s:textfield id="orig-stand_column" readonly="readonly" name="param" value="prob->stand_column" size="48" maxlength="1024" check="no" /><% if (!prob->stand_column) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupStandingsDialog(event, 'stand_column')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:stand_column" /></td>
            </s:tr>
        </table>
    </div>

</div>

<%
bottom_links: ;
%>

<%@include "cnts_edit_cur_bottom_menu.csp"
%>

<%@include "footer.csp"
%><%
cleanup:
  tmp_prob = prepare_problem_free(tmp_prob);
  l10n_resetlocale();
  html_armor_free(&ab);
%>
