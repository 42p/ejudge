<% /* -*- html -*- */
%><%@include "includes.csp"
%><%
#include "ejudge/meta/prepare_meta.h"
%><%@set getter_name = "csp_get_cnts_edit_cur_problem_page"
%><%@set ac_prefix = "SSERV_CMD_"
%><%@set err_prefix = "SSERV_ERR_"
%><%@page csp_view_cnts_edit_cur_problem_page(PageInterface *pg, FILE *log_f, FILE *out_f, struct http_request_info *phr)
%><%@include "stdvars.csp"
%><%
    unsigned char subtitle_buf[1024];
    const unsigned char *title = 0;
    const unsigned char *subtitle = subtitle_buf;
    opcap_t caps = 0;
    int row = 1;
    int cur_page = 4;
    int i;
    int prob_id = 0;
    const struct section_problem_data *prob = NULL;
    struct section_problem_data *tmp_prob = NULL;
    const struct section_problem_data *sup_prob = 0;
    int sup_id = 0, prob_type = 0;
    const unsigned char *str_value = NULL;
    int value;
    unsigned char num_buf[128];
    unsigned char *alloc_value = NULL;

static const unsigned char head_row_attr[] =
  " bgcolor=\"#a0a0a0\"";
static const unsigned char * const form_row_attrs[]=
{
  " bgcolor=\"#d0d0d0\"",
  " bgcolor=\"#e0e0e0\"",
};

    if (phr->priv_level != PRIV_LEVEL_ADMIN) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (ejudge_cfg_opcaps_find(phr->config, phr->login, &caps) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (opcaps_check(caps, OPCAP_EDIT_CONTEST) < 0) FAIL(SSERV_ERR_PERMISSION_DENIED);
    if (!phr->ss->edited_cnts) FAIL(SSERV_ERR_CONTEST_NOT_EDITED);

%><s:read var="prob_id" required="yes" /><%

    if (prob_id <= 0) {
        i = -prob_id;
        if (i >= phr->ss->aprob_u) FAIL(SSERV_ERR_INVALID_PARAMETER);
        prob = phr->ss->aprobs[i];
        if (!prob) FAIL(SSERV_ERR_INVALID_PARAMETER);
        snprintf(subtitle_buf, sizeof(subtitle_buf), "editing serve.cfg, problem %s", prob->short_name);
    } else {
        i = prob_id;
        if (i >= phr->ss->prob_a) FAIL(SSERV_ERR_INVALID_PARAMETER);
        prob = phr->ss->probs[i];
        if (!prob) FAIL(SSERV_ERR_INVALID_PARAMETER);
        snprintf(subtitle_buf, sizeof(subtitle_buf), "editing serve.cfg, problem %d", i);

        int j;
        if (prob->super && prob->super[0]) {
            for (j = 0; j < phr->ss->aprob_u; ++j) {
                if (!strcmp(prob->super, phr->ss->aprobs[j]->short_name)) {
                    sup_prob = phr->ss->aprobs[j];
                    sup_id = j + 1;
                    break;
                }
            }
        }
    }
    tmp_prob = prepare_copy_problem(prob);

    cnts = phr->ss->edited_cnts;
    struct section_global_data *global = phr->ss->global;

    prepare_set_all_prob_values(tmp_prob, sup_prob, global);

    (void) row;
    (void) head_row_attr;
    (void) form_row_attrs;

    (void) sup_id;
    (void) sup_prob;
%><%@include "header_jqgrid.csp"
%>
<script src='<s:config name="style-prefix" />priv_prob_dlg.js' type="text/javascript"></script>

<%@include "cnts_edit_cur_top_menu.csp"
%>

<%
  if (phr->ss->serve_parse_errors) {
%>
<h2><tt>serve.cfg</tt> cannot be edited</h2>
<font color="red"><pre><s:v value="phr->ss->serve_parse_errors" /></pre></font>
<%
    goto bottom_links;
  }
%>

<%
  if (!global) {
%>
<h2>No current global settings!</h2>
<%
    goto bottom_links;
  }
%>

<%@include "cnts_edit_cur_problem_macros.csp"
%>

<div id="IdDialogDiv" title="Problem Identification">
    <s:form id="IdDialogForm">
        <s:hidden name="action" ac="prob-save-id-form" />
        <input type="hidden" id="IdDialogProbId" name="prob_id" value="" />

        <div>
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-prob_id_xxx">ID:</label></div>
            <input readonly="readonly" type="text" size="20" name="prob_id_xxx" id="edit-prob_id" value="" class="text ui-widget-content ui-corner-all" />
        </div>

        <%@expand MENU_TEXTFIELD "short_name" "id" "Short name" "250" %>
        <%@expand MENU_TEXTFIELD "internal_name" "id" "Internal name" "250" %>
        <%@expand MENU_TEXTFIELD "long_name" "id" "Long name" "250" %>


        <div id="edit-super-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-super">Base abstract problem:</label></div>
            <select id="edit-super" name="super">
                <option></option>
<%
  for (i = 0; i < phr->ss->aprob_u; ++i) {
%><option><s:v value="phr->ss->aprobs[i]->short_name" /></option>
<%
  }
%>
            </select>
        </div>

        <div id="edit-type-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-type">Type:</label></div>
            <select id="edit-type" name="type">
                <option>standard</option>
                <option>output-only</option>
                <option>short-answer</option>
                <option>text-answer</option>
                <option>select-one</option>
                <option>select-many</option>
                <option>custom</option>
                <option>tests</option>
            </select>
        </div>

        <%@expand MENU_TEXTFIELD "variant_num" "id" "Number of variants" "250" %>
        <%@expand MENU_YESNO3 "autoassign_variants" "id" "Assign variants automatically" "250" %>

    </s:form>
</div>

<div id="FilesDialogDiv" title="Files and directories">
    <s:form id="FilesDialogForm">
        <s:hidden name="action" ac="prob-save-files-form" />
        <input type="hidden" id="FilesDialogProbId" name="prob_id" value="" />

        <div id="edit-binary_input-div">
            <div style="width: 250px; display: inline-block;"><label for="edit-binary_input">Input data is binary?</label></div>
            <select id="edit-binary_input" name="binary_input" onchange="filesDialogOnChange()">
<%
  if (sup_prob) {
%>
                <option value="-1">Default</option>
<%
  }
%>
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>
        </div>

        <div id="edit-normalization-div">
            <div style="width: 250px; display: inline-block;"><label for="edit-normalization">Test normalization mode:</label></div>
            <select id="edit-normalization" name="normalization">
                <option value="0">none - No normalization</option>
<%
  if (sup_prob) {
%>
                <option value="1">Default</option>
<%
  }
%>
                <option value="2">nl - End-of-line</option>
                <option value="3">nlws - End-of-line and trailing space</option>
                <option value="4">nlwsnp - End-of-line, trailing space and lines</option>
                <option value="5">nlnp - End-of-line and trailing lines</option>
            </select>
        </div>

        <div id="edit-xml_file-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-xml_file">XML File with problem statement:</label></div>
            <input type="text" size="20" name="xml_file" id="edit-xml_file" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('xml_file')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="xml_file-dflt" id="edit-xml_file-dflt" value="1" onchange="filesDialogOnChange('xml_file-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-test_dir-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-test_dir">Directory with tests:</label></div>
            <input type="text" size="20" name="test_dir" id="edit-test_dir" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('test_dir')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="test_dir-dflt" id="edit-test_dir-dflt" value="1" onchange="filesDialogOnChange('test_dir-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-test_pat-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-test_pat">Pattern for test file names:</label></div>
            <input type="text" size="20" name="test_pat" id="edit-test_pat" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('test_pat')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="test_pat-dflt" id="edit-test_pat-dflt" value="1" onchange="filesDialogOnChange('test_pat-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-test_sfx-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-test_sfx">Suffix of test files:</label></div>
            <input type="text" size="20" name="test_sfx" id="edit-test_sfx" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('test_sfx')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="test_sfx-dflt" id="edit-test_sfx-dflt" value="1" onchange="filesDialogOnChange('test_sfx-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-use_corr-div">
            <div style="width: 250px; display: inline-block;"><label for="edit-use_corr">Use &quot;correct answer&quot; files for check?</label></div>
            <select id="edit-use_corr" name="use_corr" onchange="filesDialogOnChange()">
<%
  if (sup_prob) {
%>
                <option value="-1">Default</option>
<%
  }
%>
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>
        </div>

        <div id="edit-corr_dir-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-corr_dir">Directory with &quot;correct answer&quot; files:</label></div>
            <input type="text" size="20" name="corr_dir" id="edit-corr_dir" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('corr_dir')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="corr_dir-dflt" id="edit-corr_dir-dflt" value="1" onchange="filesDialogOnChange('corr_dir-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-corr_pat-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-corr_pat">Pattern for &quot;correct answer&quot; file names:</label></div>
            <input type="text" size="20" name="corr_pat" id="edit-corr_pat" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('corr_pat')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="corr_pat-dflt" id="edit-corr_pat-dflt" value="1" onchange="filesDialogOnChange('corr_pat-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-corr_sfx-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-corr_sfx">Suffix of &quot;correct answer&quot; files:</label></div>
            <input type="text" size="20" name="corr_sfx" id="edit-corr_sfx" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('corr_sfx')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="corr_sfx-dflt" id="edit-corr_sfx-dflt" value="1" onchange="filesDialogOnChange('corr_sfx-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-use_info-div">
            <div style="width: 250px; display: inline-block;"><label for="edit-use_info">Use test info files for check?</label></div>
            <select id="edit-use_info" name="use_info" onchange="filesDialogOnChange()">
<%
  if (sup_prob) {
%>
                <option value="-1">Default</option>
<%
  }
%>
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>
        </div>

        <div id="edit-info_dir-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-info_dir">Directory with test info files:</label></div>
            <input type="text" size="20" name="info_dir" id="edit-info_dir" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('info_dir')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="info_dir-dflt" id="edit-info_dir-dflt" value="1" onchange="filesDialogOnChange(info_dir-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-info_pat-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-info_pat">Pattern for test info file names:</label></div>
            <input type="text" size="20" name="info_pat" id="edit-info_pat" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('info_pat')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="info_pat-dflt" id="edit-info_pat-dflt" value="1" onchange="filesDialogOnChange('info_pat-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-info_sfx-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-info_sfx">Suffix of test info:</label></div>
            <input type="text" size="20" name="info_sfx" id="edit-info_sfx" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('info_sfx')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="info_sfx-dflt" id="edit-info_sfx-dflt" value="1" onchange="filesDialogOnChange('info_sfx-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-use_tgz-div">
            <div style="width: 250px; display: inline-block;"><label for="edit-use_tgz">Use special working directory for check?</label></div>
            <select id="edit-use_tgz" name="use_tgz" onchange="filesDialogOnChange()">
<%
  if (sup_prob) {
%>
                <option value="-1">Default</option>
<%
  }
%>
                <option value="0">No</option>
                <option value="1">Yes</option>
            </select>
        </div>

        <div id="edit-tgz_pat-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-tgz_pat">Pattern for working dir archives:</label></div>
            <input type="text" size="20" name="tgz_pat" id="edit-tgz_pat" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('tgz_pat')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="tgz_pat-dflt" id="edit-tgz_pat-dflt" value="1" onchange="filesDialogOnChange('tgz_pat-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-tgzdir_pat-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-tgzdir_pat">Pattern for master working dirs:</label></div>
            <input type="text" size="20" name="tgzdir_pat" id="edit-tgzdir_pat" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('tgzdir_pat')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="tgzdir_pat-dflt" id="edit-tgzdir_pat-dflt" value="1" onchange="filesDialogOnChange('tgzdir_pat-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-tgz_sfx-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-tgz_sfx">Suffix of working dir archives:</label></div>
            <input type="text" size="20" name="tgz_sfx" id="edit-tgz_sfx" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('tgz_sfx')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="tgz_sfx-dflt" id="edit-tgz_sfx-dflt" value="1" onchange="filesDialogOnChange('tgz_sfx-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-tgzdir_sfx-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-tgzdir_sfx">Suffix of master working dirs:</label></div>
            <input type="text" size="20" name="tgzdir_sfx" id="edit-tgzdir_sfx" value="" class="text ui-widget-content ui-corner-all" onchange="filesDialogOnChange('tgzdir_sfx')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="tgzdir_sfx-dflt" id="edit-tgzdir_sfx-dflt" value="1" onchange="filesDialogOnChange('tgzdir_sfx-dflt')" />)<%
  }
%>
        </div>

    </s:form>
</div>

<div id="ValidationDialogDiv" title="Validation">
    <s:form id="ValidationDialogForm">
        <s:hidden name="action" ac="prob-save-validation-form" />
        <input type="hidden" id="ValidationDialogProbId" name="prob_id" value="" />

        <div id="edit-test_checker_cmd-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-test_checker_cmd">Test checker (validator) name:</label></div>
            <input type="text" size="20" name="test_checker_cmd" id="edit-test_checker_cmd" value="" class="text ui-widget-content ui-corner-all" onchange="validationDialogOnChange('test_checker_cmd')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="test_checker_cmd-dflt" id="edit-test_checker_cmd-dflt" value="1" onchange="validationDialogOnChange('test_checker_cmd-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-test_checker_env-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-test_checker_env">Test checker environment:</label></div>
            <input type="text" size="20" name="test_checker_env" id="edit-test_checker_env" value="" class="text ui-widget-content ui-corner-all" onchange="validationDialogOnChange('test_checker_env')" />
        </div>

        <div id="edit-solution_src-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-solution_src">Solution source name:</label></div>
            <input type="text" size="20" name="solution_src" id="edit-solution_src" value="" class="text ui-widget-content ui-corner-all" onchange="validationDialogOnChange('solution_src')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="solution_src-dflt" id="edit-solution_src-dflt" value="1" onchange="validationDialogOnChange('solution_src-dflt')" />)<%
  }
%>
        </div>

        <div id="edit-solution_cmd-div">
            <div style="width: 250px; display: inline-block;"><label style="display:block; width: 250px" for="edit-solution_cmd">Solution command:</label></div>
            <input type="text" size="20" name="solution_cmd" id="edit-solution_cmd" value="" class="text ui-widget-content ui-corner-all" onchange="validationDialogOnChange('solution_cmd')" /><%
  if (sup_prob) {
%>(Default: <input type="checkbox" name="solution_cmd-dflt" id="edit-solution_cmd-dflt" value="1" onchange="validationDialogOnChange('solution_cmd-dflt')" />)<%
  }
%>
        </div>
    </s:form>
</div>

<div id="ViewDialogDiv" title="Statement View">
    <s:form id="ViewDialogForm">
        <s:hidden name="action" ac="prob-save-view-form" />
        <input type="hidden" id="ViewDialogProbId" name="prob_id" value="" />

        <%@expand MENU_YESNO3 "disable_tab" "view" "Disable problem tab" "250" %>
        <%@expand MENU_YESNO3 "unrestricted_statement" "view" "Unrestricted problem statement" "250" %>
        <%@expand MENU_YESNO3 "hide_file_names" "view" "Hide input/output file names" "250" %>
        <%@expand MENU_YESNO3 "hide_real_time_limit" "view" "Hide real-time limit" "250" %>
        <%@expand MENU_YESNO3 "hide_variant" "view" "Hide variant" "250" %>

    </s:form>
</div>

<h2><%
    if (prob_id <= 0) {
%>Abstract problem <%
    } else {
%>Problem <%
    }
%><s:v value="i" /><%
    if (prob->short_name && prob->short_name[0]) {
%>, <s:v value="prob->short_name" /><%
    }
%><%
    if (prob->internal_name && prob->internal_name[0]) {
%>, <s:v value="prob->internal_name" /><%
    }
%><%
    if (prob->long_name && prob->long_name[0]) {
%>, <s:v value="prob->long_name" /><%
    }
%></h2>

<script type="text/javascript">
var prob_id = <s:v value="prob_id" />;
</script>

<%@include "cnts_edit_cur_problem_submission.csp"
%>
<%@include "cnts_edit_cur_problem_compiling.csp"
%>
<%@include "cnts_edit_cur_problem_running.csp"
%>
<%@include "cnts_edit_cur_problem_limits.csp"
%>
<%@include "cnts_edit_cur_problem_checking.csp"
%>
<%@include "cnts_edit_cur_problem_scoring.csp"
%>
<%@include "cnts_edit_cur_problem_feedback.csp"
%>
<%@include "cnts_edit_cur_problem_standing.csp"
%>

<script type="text/javascript">
$(function() {
    $('#ProblemAccordion').accordion({ heightStyle: "content" });

    idDialog = $("#IdDialogDiv").dialog({
        autoOpen: false,
        height: 350,
        width: 650,
        modal: true,
        buttons: {
            "Save": function() {
                var postData = $("#IdDialogForm").serialize();
                var formURL = $("#IdDialogForm").attr("action");
                $.ajax({
                    url : formURL,
                    type: "POST",
                    data : postData,
                    success:function(data, textStatus, jqXHR) {
                        //data: return data from server
                        document.location.reload(true);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        //if fails     
                    }
                });
            },
            Cancel: function() {
                idDialog.dialog("close");
            }
        },
        close : function() {
        }
    });

    $("#orig-autoassign_variants-div").toggle(<s:v type="jsbool" value="prob->variant_num > 0" />);

    filesDialog = $("#FilesDialogDiv").dialog({
        autoOpen: false,
        height: 500,
        width: 700,
        modal: true,
        buttons: {
            "Save": function() {
                var postData = $("#FilesDialogForm").serialize();
                var formURL = $("#FilesDialogForm").attr("action");
                $.ajax({
                    url : formURL,
                    type: "POST",
                    data : postData,
                    success:function(data, textStatus, jqXHR) {
                        //data: return data from server
                        document.location.reload(true);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        //if fails     
                    }
                });
            },
            Cancel: function() {
                filesDialog.dialog("close");
            }
        },
        close : function() {
        }
    });

    $("#orig-normalization-div").toggle(<s:v type="jsbool" value="tmp_prob->binary_input <= 0" />);
    $("#orig-test_dir-div").toggle(<s:v type="jsbool" value="global->advanced_layout <= 0" />);

    $("#orig-corr_dir-div").toggle(<s:v type="jsbool" value="global->advanced_layout <= 0 && tmp_prob->use_corr > 0" />);
    $("#orig-corr_sfx-div").toggle(<s:v type="jsbool" value="tmp_prob->use_corr > 0" />);
    $("#orig-corr_pat-div").toggle(<s:v type="jsbool" value="tmp_prob->use_corr > 0" />);

    $("#orig-info_dir-div").toggle(<s:v type="jsbool" value="global->advanced_layout <= 0 && tmp_prob->use_info > 0" />);
    $("#orig-info_sfx-div").toggle(<s:v type="jsbool" value="tmp_prob->use_info > 0" />);
    $("#orig-info_pat-div").toggle(<s:v type="jsbool" value="tmp_prob->use_info > 0" />);

    $("#orig-tgz_sfx-div").toggle(<s:v type="jsbool" value="tmp_prob->use_tgz > 0" />);
    $("#orig-tgz_pat-div").toggle(<s:v type="jsbool" value="tmp_prob->use_tgz > 0" />);
    $("#orig-tgzdir_sfx-div").toggle(<s:v type="jsbool" value="tmp_prob->use_tgz > 0" />);
    $("#orig-tgzdir_pat-div").toggle(<s:v type="jsbool" value="tmp_prob->use_tgz > 0" />);

    validationDialog = $("#ValidationDialogDiv").dialog({
        autoOpen: false,
        height: 300,
        width: 600,
        modal: true,
        buttons: {
            "Save": function() {
                var postData = $("#ValidationDialogForm").serialize();
                var formURL = $("#ValidationDialogForm").attr("action");
                $.ajax({
                    url : formURL,
                    type: "POST",
                    data : postData,
                    success:function(data, textStatus, jqXHR) {
                        //data: return data from server
                        document.location.reload(true);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        //if fails     
                    }
                });
            },
            Cancel: function() {
                validationDialog.dialog("close");
            }
        },
        close : function() {
        }
    });

    $("#orig-test_checker_env-div").toggle(<s:v type="jsbool" value="tmp_prob->test_checker_cmd" />);

    viewDialog = $("#ViewDialogDiv").dialog({
        autoOpen: false,
        height: 300,
        width: 600,
        modal: true,
        buttons: {
            "Save": function() {
                var postData = $("#ViewDialogForm").serialize();
                var formURL = $("#ViewDialogForm").attr("action");
                $.ajax({
                    url : formURL,
                    type: "POST",
                    data : postData,
                    success:function(data, textStatus, jqXHR) {
                        //data: return data from server
                        document.location.reload(true);
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        //if fails     
                    }
                });
            },
            Cancel: function() {
                viewDialog.dialog("close");
            }
        },
        close : function() {
        }
    });

    $("#orig-disable_tab-div").toggle(<s:v type="jsbool" value="global->problem_navigation > 0" />);
    $("#orig-hide_variant-div").toggle(<s:v type="jsbool" value="prob->variant_num > 0" />);

});

function np(e)
{
    if (e) e.stopPropagation();
}

function copyCheckbox(dst, src)
{
    var dstobj = document.getElementById(dst);
    var srcobj = document.getElementById(src);
    if (dstobj != null) {
        if (srcobj != null && srcobj.value == "1") {
            dstobj.checked = true;
        } else {
            dstobj.checked = false;
        }
    }
}

function toBool(str, def)
{
    if (str == "-1") {
        return def;
    } else if (str == "1") {
        return true;
    } else {
        return false;
    }
}

function popupIdDialog(e, skipField)
{
    $("#IdDialogProbId").val(prob_id);
    $("#edit-prob_id").val(prob_id);
    $("#edit-short_name").val($("#orig-short_name").val());
    $("#edit-internal_name").val($("#orig-internal_name").val());
    $("#edit-long_name").val($("#orig-long_name").val());
    $("#edit-super").val($("#orig-super").val());
    $("#edit-type").val($("#orig-type").val());
    $("#edit-variant_num").val($("#orig-variant_num").val());
    $("#edit-autoassign_variants").val($("#orig-autoassign_variants").val());

    if (e) e.stopPropagation();
    idDialogOnChange();
    $("#IdDialogDiv").dialog('open');
}

function idDialogOnChange()
{
    var num = parseInt($("#edit-variant_num").val());
    $("#edit-autoassign_variants-div").toggle(num > 0);
}

function popupFilesDialog(e, skipField)
{
    $("#FilesDialogProbId").val(prob_id);
    $("#edit-binary_input").val($("#orig-binary_input").val());
    $("#edit-normalization").val($("#orig-normalization").val());

    $("#edit-xml_file").val($("#orig-xml_file").val());
<%
  if (sup_prob) {
%>
    $("#edit-xml_file-dflt").prop('checked', <s:v type="jsbool" value="!prob->xml_file[0]" />);
<%
  }
%>

    $("#edit-test_dir").val($("#orig-test_dir").val());
<%
  if (sup_prob) {
%>
    $("#edit-test_dir-dflt").prop('checked', <s:v type="jsbool" value="!prob->test_dir[0]" />);
<%
  }
%>

    $("#edit-test_pat").val($("#orig-test_pat").val());
<%
  if (sup_prob) {
%>
    $("#edit-test_pat-dflt").prop('checked', <s:v type="jsbool" value="prob->test_pat[0] == 1" />);
<%
  }
%>

    $("#edit-test_sfx").val($("#orig-test_sfx").val());
<%
  if (sup_prob) {
%>
    $("#edit-test_sfx-dflt").prop('checked', <s:v type="jsbool" value="prob->test_sfx[0] == 1" />);
<%
  }
%>

    $("#edit-use_corr").val($("#orig-use_corr").val());
    $("#edit-corr_dir").val($("#orig-corr_dir").val());
<%
  if (sup_prob) {
%>
    $("#edit-corr_dir-dflt").prop('checked', <s:v type="jsbool" value="!prob->corr_dir[0]" />);
<%
  }
%>
    $("#edit-corr_pat").val($("#orig-corr_pat").val());
<%
  if (sup_prob) {
%>
    $("#edit-corr_pat-dflt").prop('checked', <s:v type="jsbool" value="prob->corr_pat[0] == 1" />);
<%
  }
%>
    $("#edit-corr_sfx").val($("#orig-corr_sfx").val());
<%
  if (sup_prob) {
%>
    $("#edit-corr_sfx-dflt").prop('checked', <s:v type="jsbool" value="prob->corr_sfx[0] == 1" />);
<%
  }
%>

    $("#edit-use_info").val($("#orig-use_info").val());
    $("#edit-info_dir").val($("#orig-info_dir").val());
<%
  if (sup_prob) {
%>
    $("#edit-info_dir-dflt").prop('checked', <s:v type="jsbool" value="!prob->info_dir[0]" />);
<%
  }
%>
    $("#edit-info_pat").val($("#orig-info_pat").val());
<%
  if (sup_prob) {
%>
    $("#edit-info_pat-dflt").prop('checked', <s:v type="jsbool" value="prob->info_pat[0] == 1" />);
<%
  }
%>
    $("#edit-info_sfx").val($("#orig-info_sfx").val());
<%
  if (sup_prob) {
%>
    $("#edit-info_sfx-dflt").prop('checked', <s:v type="jsbool" value="prob->info_sfx[0] == 1" />);
<%
  }
%>

    $("#edit-use_tgz").val($("#orig-use_tgz").val());
    $("#edit-tgz_pat").val($("#orig-tgz_pat").val());
<%
  if (sup_prob) {
%>
    $("#edit-tgz_pat-dflt").prop('checked', <s:v type="jsbool" value="prob->tgz_pat[0] == 1" />);
<%
  }
%>
    $("#edit-tgz_sfx").val($("#orig-tgz_sfx").val());
<%
  if (sup_prob) {
%>
    $("#edit-tgz_sfx-dflt").prop('checked', <s:v type="jsbool" value="prob->tgz_sfx[0] == 1" />);
<%
  }
%>
    $("#edit-tgzdir_pat").val($("#orig-tgzdir_pat").val());
<%
  if (sup_prob) {
%>
    $("#edit-tgzdir_pat-dflt").prop('checked', <s:v type="jsbool" value="prob->tgzdir_pat[0] == 1" />);
<%
  }
%>
    $("#edit-tgzdir_sfx").val($("#orig-tgzdir_sfx").val());
<%
  if (sup_prob) {
%>
    $("#edit-tgzdir_sfx-dflt").prop('checked', <s:v type="jsbool" value="prob->tgzdir_sfx[0] == 1" />);
<%
  }
%>

    if (e) e.stopPropagation();
    filesDialogOnChange();
    $("#FilesDialogDiv").dialog('open');
}

function filesDialogOnChange(field)
{
    $("#edit-normalization-div").toggle(!toBool($("#edit-binary_input").val(), <s:v type="jsbool" value="sup_prob && sup_prob->binary_input > 0" />));
    if (field == "xml_file-dflt") {
        if ($("#edit-xml_file-dflt").is(':checked')) {
            $("#edit-xml_file").val("");
        }
    } else if (field == "xml_file") {
        if ($("#edit-xml_file").val() != "") {
            $("#edit-xml_file-dflt").prop('checked', false);
        }
    }

    $("#edit-test_dir-div").toggle(<s:v type="jsbool" value="global->advanced_layout <= 0" />);
    if (field == "test_dir-dflt") {
        if ($("#edit-test_dir-dflt").is(':checked')) {
            $("#edit-test_dir").val("");
        }
    } else if (field == "test_dir") {
        if ($("#edit-test_dir").val() != "") {
            $("#edit-test_dir-dflt").prop('checked', false);
        }
    }
    if (field == "test_pat-dflt") {
        if ($("#edit-test_pat-dflt").is(':checked')) {
            $("#edit-test_pat").val("");
        }
    } else if (field == "test_pat") {
        if ($("#edit-test_pat").val() != "") {
            $("#edit-test_pat-dflt").prop('checked', false);
        }
    }
    if (field == "test_sfx-dflt") {
        if ($("#edit-test_sfx-dflt").is(':checked')) {
            $("#edit-test_sfx").val("");
        }
    } else if (field == "test_sfx") {
        if ($("#edit-test_sfx").val() != "") {
            $("#edit-test_sfx-dflt").prop('checked', false);
        }
    }

    $("#edit-corr_dir-div").toggle(<s:v type="jsbool" value="global->advanced_layout <= 0" /> && toBool($("#edit-use_corr").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_corr > 0" />));
    $("#edit-corr_sfx-div").toggle(toBool($("#edit-use_corr").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_corr > 0" />));
    $("#edit-corr_pat-div").toggle(toBool($("#edit-use_corr").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_corr > 0" />));

    if (field == "corr_dir-dflt") {
        if ($("#edit-corr_dir-dflt").is(':checked')) {
            $("#edit-corr_dir").val("");
        }
    } else if (field == "corr_dir") {
        if ($("#edit-corr_dir").val() != "") {
            $("#edit-corr_dir-dflt").prop('checked', false);
        }
    }
    if (field == "corr_pat-dflt") {
        if ($("#edit-corr_pat-dflt").is(':checked')) {
            $("#edit-corr_pat").val("");
        }
    } else if (field == "corr_pat") {
        if ($("#edit-corr_pat").val() != "") {
            $("#edit-corr_pat-dflt").prop('checked', false);
        }
    }
    if (field == "corr_sfx-dflt") {
        if ($("#edit-corr_sfx-dflt").is(':checked')) {
            $("#edit-corr_sfx").val("");
        }
    } else if (field == "corr_sfx") {
        if ($("#edit-corr_sfx").val() != "") {
            $("#edit-corr_sfx-dflt").prop('checked', false);
        }
    }

    $("#edit-info_dir-div").toggle(<s:v type="jsbool" value="global->advanced_layout <= 0" /> && toBool($("#edit-use_info").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_info > 0" />));
    $("#edit-info_sfx-div").toggle(toBool($("#edit-use_info").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_info > 0" />));
    $("#edit-info_pat-div").toggle(toBool($("#edit-use_info").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_info > 0" />));

    if (field == "info_dir-dflt") {
        if ($("#edit-info_dir-dflt").is(':checked')) {
            $("#edit-info_dir").val("");
        }
    } else if (field == "info_dir") {
        if ($("#edit-info_dir").val() != "") {
            $("#edit-info_dir-dflt").prop('checked', false);
        }
    }
    if (field == "info_pat-dflt") {
        if ($("#edit-info_pat-dflt").is(':checked')) {
            $("#edit-info_pat").val("");
        }
    } else if (field == "info_pat") {
        if ($("#edit-info_pat").val() != "") {
            $("#edit-info_pat-dflt").prop('checked', false);
        }
    }
    if (field == "info_sfx-dflt") {
        if ($("#edit-info_sfx-dflt").is(':checked')) {
            $("#edit-info_sfx").val("");
        }
    } else if (field == "info_sfx") {
        if ($("#edit-info_sfx").val() != "") {
            $("#edit-info_sfx-dflt").prop('checked', false);
        }
    }

    $("#edit-tgz_sfx-div").toggle(toBool($("#edit-use_tgz").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_tgz > 0" />));
    $("#edit-tgz_pat-div").toggle(toBool($("#edit-use_tgz").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_tgz > 0" />));
    $("#edit-tgzdir_sfx-div").toggle(toBool($("#edit-use_tgz").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_tgz > 0" />));
    $("#edit-tgzdir_pat-div").toggle(toBool($("#edit-use_tgz").val(), <s:v type="jsbool" value="sup_prob && sup_prob->use_tgz > 0" />));

    if (field == "tgz_pat-dflt") {
        if ($("#edit-tgz_pat-dflt").is(':checked')) {
            $("#edit-tgz_pat").val("");
        }
    } else if (field == "tgz_pat") {
        if ($("#edit-tgz_pat").val() != "") {
            $("#edit-tgz_pat-dflt").prop('checked', false);
        }
    }
    if (field == "tgz_sfx-dflt") {
        if ($("#edit-tgz_sfx-dflt").is(':checked')) {
            $("#edit-tgz_sfx").val("");
        }
    } else if (field == "tgz_sfx") {
        if ($("#edit-tgz_sfx").val() != "") {
            $("#edit-tgz_sfx-dflt").prop('checked', false);
        }
    }
    if (field == "tgzdir_pat-dflt") {
        if ($("#edit-tgzdir_pat-dflt").is(':checked')) {
            $("#edit-tgzdir_pat").val("");
        }
    } else if (field == "tgzdir_pat") {
        if ($("#edit-tgzdir_pat").val() != "") {
            $("#edit-tgzdir_pat-dflt").prop('checked', false);
        }
    }
    if (field == "tgzdir_sfx-dflt") {
        if ($("#edit-tgzdir_sfx-dflt").is(':checked')) {
            $("#edit-tgzdir_sfx").val("");
        }
    } else if (field == "tgzdir_sfx") {
        if ($("#edit-tgzdir_sfx").val() != "") {
            $("#edit-tgzdir_sfx-dflt").prop('checked', false);
        }
    }
}

function popupValidationDialog(e, skipField)
{
    $("#ValidationDialogProbId").val(prob_id);

    $("#edit-test_checker_cmd").val($("#orig-test_checker_cmd").val());
<%
  if (sup_prob) {
%>
    $("#edit-test_checker_cmd-dflt").prop('checked', <s:v type="jsbool" value="!prob->test_checker_cmd" />);
<%
  }
%>
    $("#edit-test_checker_env").val($("#orig-test_checker_env").val());
    $("#edit-solution_src").val($("#orig-solution_src").val());
<%
  if (sup_prob) {
%>
    $("#edit-solution_src-dflt").prop('checked', <s:v type="jsbool" value="!prob->solution_src" />);
<%
  }
%>
    $("#edit-solution_cmd").val($("#orig-solution_cmd").val());
<%
  if (sup_prob) {
%>
    $("#edit-solution_cmd-dflt").prop('checked', <s:v type="jsbool" value="!prob->solution_cmd" />);
<%
  }
%>

    if (e) e.stopPropagation();
    validationDialogOnChange();
    $("#ValidationDialogDiv").dialog('open');
}

function validationDialogOnChange(field)
{
    if (field == "test_checker_cmd-dflt") {
        if ($("#edit-test_checker_cmd-dflt").is(':checked')) {
            $("#edit-test_checker_cmd").val("");
        }
    } else if (field == "test_checker_cmd") {
        if ($("#edit-test_checker_cmd").val() != "") {
            $("#edit-test_checker_cmd-dflt").prop('checked', false);
        }
    }
    $("#edit-test_checker_env-div").toggle($("#edit-test_checker_cmd").val() != "" || (<s:v type="jsbool" value="sup_prob && sup_prob->test_checker_cmd" /> && $("#edit-test_checker_cmd-dflt").is(':checked')));
    if (field == "solution_src-dflt") {
        if ($("#edit-solution_src-dflt").is(':checked')) {
            $("#edit-solution_src").val("");
        }
    } else if (field == "solution_src") {
        if ($("#edit-solution_src").val() != "") {
            $("#edit-solution_src-dflt").prop('checked', false);
        }
    }
    if (field == "solution_cmd-dflt") {
        if ($("#edit-solution_cmd-dflt").is(':checked')) {
            $("#edit-solution_cmd").val("");
        }
    } else if (field == "solution_cmd") {
        if ($("#edit-solution_cmd").val() != "") {
            $("#edit-solution_cmd-dflt").prop('checked', false);
        }
    }
}

function popupViewDialog(e, skipField)
{
    $("#ViewDialogProbId").val(prob_id);

    $("#edit-disable_tab").val($("#orig-disable_tab").val());
    $("#edit-unrestricted_statement").val($("#orig-unrestricted_statement").val());
    $("#edit-hide_file_names").val($("#orig-hide_file_names").val());
    $("#edit-hide_real_time_limit").val($("#orig-hide_real_time_limit").val());
    $("#edit-hide_variant").val($("#orig-hide_variant").val());

    if (e) e.stopPropagation();
    viewDialogOnChange();
    $("#ViewDialogDiv").dialog('open');
}

function viewDialogOnChange(field)
{
    $("#edit-disable_tab-div").toggle(<s:v type="jsbool" value="global->problem_navigation > 0" />);
    $("#edit-hide_variant-div").toggle(<s:v type="jsbool" value="prob->variant_num > 0" />);
}

</script>

<div id="ProblemAccordion">
    <h3>Problem identification</h3>
    <div>
        <table border="0" onclick="popupIdDialog()">

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-id-div">
                <td>ID:</td>
                <td><s:textfield id="orig-id" readonly="readonly" name="param" value="prob->id" size="48" maxlength="1024" check="false" /></td>
                <td>&nbsp;</td>
                <td>&nbsp;</td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-short_name-div">
                <td>Short name:</td>
                <td><s:textfield id="orig-short_name" readonly="readonly" name="param" value="prob->short_name" size="48" maxlength="1024" check="no" /><% if (!prob->short_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupIdDialog(event, 'short_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:short_name" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-internal_name-div">
                <td>Internal name:</td>
                <td><s:textfield id="orig-internal_name" readonly="readonly" name="param" value="prob->internal_name" size="48" maxlength="1024" check="no" /><% if (!prob->internal_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupIdDialog(event, 'internal_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:internal_name" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-long_name-div">
                <td>Long name:</td>
                <td><s:textfield id="orig-long_name" readonly="readonly" name="param" value="prob->long_name" size="48" maxlength="1024" check="no" /><% if (!prob->long_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupIdDialog(event, 'long_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:long_name" /></td>
            </s:tr>

<%
    str_value = NULL;
    if (sup_prob && sup_prob->short_name && sup_prob->short_name[0]) {
        str_value = sup_prob->short_name;
    }
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-super-div">
                <td>Base abstract problem:</td>
                <td><s:textfield id="orig-super" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><% if (!str_value) { %>(<i>Not set</i>)<% } %></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:super" /></td>
            </s:tr>

<%
    prob_type = prob->type;
    if (prob_type < 0 || prob_type >= PROB_TYPE_LAST) prob_type = 0;
    str_value = problem_unparse_type(prob_type);
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-type-div">
                <td>Type:</td>
                <td><s:textfield id="orig-type" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><% if (!str_value) { %>(<i>Not set</i>)<% } %></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:type" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-variant_num-div">
                <td>Number of variants:</td>
                <td><s:textfield id="orig-variant_num" readonly="readonly" name="param" value="prob->variant_num" size="48" maxlength="1024" checkExpr="> 0" /><%
    if (prob->variant_num <= 0) {
%>(<i>No variants</i>)<%
    }
%></td>
                <td><%
    if (prob->variant_num > 0) {
%>[<s:a ac="cnts-start-edit-variant-action">Edit variants</s:a>]<%
    }
%></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:variant_num" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "autoassign_variants" "Id" "Assign variants automatically" %>

        </table>
    </div>

    <h3>Files and directories</h3>

    <div>
        <table border="0" onclick="popupFilesDialog()">

            <%@expand ORIG_INHERITABLE_BOOLEAN "binary_input" "Files" "Input data is binary" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-normalization-div">
                <td>Test normalization mode:</td>
                <td><%
    value = test_normalization_parse(prob->normalization);
    if (value < 0) value = TEST_NORM_DEFAULT;
    if (!sup_prob) {
      if (value == TEST_NORM_DEFAULT) value = TEST_NORM_NL;
%><s:hidden id="orig-normalization" name="param" value="value" /><s:v value="test_normalization_unparse_full(value)" escape="false" /><%
    } else if (value == TEST_NORM_DEFAULT) {
      value = test_normalization_parse(sup_prob->normalization);
      if (value < 0) value = TEST_NORM_NL;
%><s:hidden id="orig-normalization" name="param" value="value" /><%
      if (value == TEST_NORM_DEFAULT) value = TEST_NORM_NL;
%>Default (<s:v value="test_normalization_unparse_full(value)" escape="false" />)<%
    } else {
%><s:hidden id="orig-normalization" name="param" value="value" /><s:v value="test_normalization_unparse_full(value)" escape="false" /><%
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:normalization" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-xml_file-div">
                <td>XML File with problem statement:</td>
                <td><%
  str_value = prob->xml_file;
  if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield id="orig-xml_file" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
  if (prob_id <= 0) {
%><% if (!str_value) { %>(<i>Not set</i>)<% } %><%
  } else if (!sup_prob) {
    if (!str_value) {
%>(<i>Not set</i>)<%
    } else {
%>(<i><s:v value="tmp_prob->xml_file" /></i>)<%
    }
  } else {
    if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->xml_file" /></i>)<%
    } else {
%>(<i><s:v value="tmp_prob->xml_file" /></i>)<%
    }
  }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'xml_file')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:xml_file" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_dir-div">
                <td>Directory with tests:</td>
                <td><%
    str_value = prob->test_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield id="orig-test_dir" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value || !sup_prob) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->test_dir" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'test_dir')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_dir" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_pat-div">
                <td>Pattern for test file names:</td>
                <td><%
    str_value = prob->test_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-test_pat" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_pat" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'test_pat')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_pat" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_sfx-div">
                <td>Suffix of test files:</td>
                <td><%
    str_value = prob->test_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-test_sfx" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->test_sfx" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'test_sfx')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_sfx" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "use_corr" "Files" "Use &quot;correct answer&quot; files for check" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-corr_dir-div">
                <td>Directory with &quot;correct answer&quot; files:</td>
                <td><%
    str_value = prob->corr_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield id="orig-corr_dir" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0 || !sup_prob) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_corr_dir, tmp_prob, sup_prob, global);
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->corr_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->corr_dir" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'corr_dir')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:corr_dir" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-corr_pat-div">
                <td>Pattern for &quot;correct answer&quot; file names:</td>
                <td><%
    str_value = prob->corr_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-corr_pat" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->corr_pat" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'corr_pat')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:corr_pat" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-corr_sfx-div">
                <td>Suffix of &quot;correct answer&quot; files:</td>
                <td><%
    str_value = prob->corr_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-corr_sfx" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->corr_sfx" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'corr_sfx')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:corr_sfx" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "use_info" "Files" "Use test info files for check" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-info_dir-div">
                <td>Directory with test info files:</td>
                <td><%
    str_value = prob->info_dir;
    if (str_value && str_value[0] < ' ') str_value = 0;
%><s:textfield id="orig-info_dir" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_info_dir, tmp_prob, sup_prob, global);
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->info_dir" /></i>)<%
      } else {
%>(<i><s:v value="tmp_prob->info_dir" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'info_dir')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:info_dir" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-info_pat-div">
                <td>Pattern for test info file names:</td>
                <td><%
    str_value = prob->info_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-info_pat" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->info_pat" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'info_pat')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:info_pat" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-info_sfx-div">
                <td>Suffix of test info:</td>
                <td><%
    str_value = prob->info_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-info_sfx" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->info_sfx" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'info_sfx')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:info_sfx" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "use_tgz" "Files" "Use special working directory for check" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-tgz_pat-div">
                <td>Pattern for working dir archives:</td>
                <td><%
    str_value = prob->tgz_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-tgz_pat" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgz_pat" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'tgz_pat')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:tgz_pat" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-tgzdir_pat-div">
                <td>Pattern for master working dirs:</td>
                <td><%
    str_value = prob->tgzdir_pat;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-tgzdir_pat" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgzdir_pat" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'tgzdir_pat')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:tgzdir_pat" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-tgz_sfx-div">
                <td>Suffix of working dir archives:</td>
                <td><%
    str_value = prob->tgz_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-tgz_sfx" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgz_sfx" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'tgz_sfx')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:tgz_sfx" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-tgzdir_sfx-div">
                <td>Suffix of master working dirs:</td>
                <td><%
    str_value = prob->tgzdir_sfx;
    if (str_value[0] == 1) str_value = 0;
%><s:textfield id="orig-tgzdir_sfx" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!sup_prob && !str_value) {
%>(<i>Not set</i>)<%
      } else if (!str_value) {
%>(<i>Default: <s:v value="tmp_prob->tgzdir_sfx" /></i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupFilesDialog(event, 'tgzdir_sfx')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:tgzdir_sfx" /></td>
            </s:tr>

        </table>
    </div>

    <h3>Validation</h3>

    <div>
        <table border="0" onclick="popupValidationDialog()">

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_checker_cmd-div">
                <td>Test checker (validator) name:</td>
                <td><%
%><s:textfield id="orig-test_checker_cmd" readonly="readonly" name="param" value="prob->test_checker_cmd" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!prob->test_checker_cmd) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!prob->test_checker_cmd) {
        if (!tmp_prob->test_checker_cmd) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->test_checker_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupValidationDialog(event, 'test_checker_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_checker_cmd" /></td>
            </s:tr>

            <%@expand ORIG_ENV "test_checker_env" "Validation" "Test checker environment" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-solution_src-div">
                <td>Solution source name:</td>
                <td><%
%><s:textfield id="orig-solution_src" readonly="readonly" name="param" value="prob->solution_src" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!prob->solution_src) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!prob->solution_src) {
        if (!tmp_prob->solution_src) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->solution_src" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupValidationDialog(event, 'solution_src')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:solution_src" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-solution_cmd-div">
                <td>Solution command:</td>
                <td><%
%><s:textfield id="orig-solution_cmd" readonly="readonly" name="param" value="prob->solution_cmd" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!prob->solution_cmd) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!prob->solution_cmd) {
        if (!tmp_prob->solution_cmd) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->solution_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupValidationDialog(event, 'solution_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:solution_cmd" /></td>
            </s:tr>

        </table>
    </div>

    <h3>Statement view</h3>

    <div>
        <table border="0" onclick="popupViewDialog()">

            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_tab" "View" "Disable problem tab" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "unrestricted_statement" "View" "Unrestricted problem statement" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "hide_file_names" "View" "Hide input/output file names from problem statement" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "hide_real_time_limit" "View" "Hide real-time limit from problem statement" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "hide_variant" "View" "Hide variant from user" %>

        </table>
    </div>

    <h3>Submission</h3>

    <div>
        <table border="0" onclick="popupSubmissionDialog()">

            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_user_submit" "Submission" "Disable user submissions" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_submit_after_ok" "Submission" "Disable submissions after OK" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "binary" "Submission" "Submit is binary" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-max_user_run_count-div">
                <td>Max submissions for the problem:</td>
                <td><s:textfield id="orig-max_user_run_count" readonly="readonly" name="param" value="prob->max_user_run_count" size="48" maxlength="1024" checkExpr=">= 0" /><%
    if (!sup_prob) {
      if (prob->max_user_run_count < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (prob->max_user_run_count < 0 && tmp_prob->max_user_run_count < 0) {
%>(<i>Not set</i>)<%
      } else if (tmp_prob->max_user_run_count > 0) {
%>(<i>Default: <s:v value="tmp_prob->max_user_run_count" /></i>)<%
      } else {
%>(<i>Default: unlimited</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:max_user_run_count" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "advance_to_next" "Submission" "Automatically advance to the next problem" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_ctrl_chars" "Submission" "Disable control characters in the source code" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "enable_text_form" "Submission" "Enable textarea input form" %>
            <%@expand ORIG_ENV "disable_language" "Submission" "Disabled languages" %>
            <%@expand ORIG_ENV "enable_language" "Submission" "Enabled languages" %>
            <%@expand ORIG_ENV "require" "Submission" "Required problems" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-start_date-div">
                <td>Accept start date:</td>
                <td><% html_date_select_2(out_f, prob->start_date, "orig-start_date", "param", NULL, 1, 0, 0); %></td>
                <td><input type="button" onclick="popupSubmissionDialog(event, 'start_date')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:start_date" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-deadline-div">
                <td>Accept deadline:</td>
                <td><% html_date_select_2(out_f, prob->deadline, "orig-deadline", "param", NULL, 1, 0, 0); %></td>
                <td><input type="button" onclick="popupSubmissionDialog(event, 'deadline')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:deadline" /></td>
            </s:tr>

        </table>
    </div>

    <h3>Compiling</h3>

    <div>
        <table border="0" onclick="popupCompilingDialog()">

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-style_checker_cmd-div">
                <td>Style checker name:</td>
                <td><%
    str_value = prob->style_checker_cmd;
    if (!str_value[0]) str_value = NULL;
%><s:textfield id="orig-style_checker_cmd" readonly="readonly" name="param" value="str_value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!str_value) {
        if (!tmp_prob->style_checker_cmd[0]) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->style_checker_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupCompilingDialog(event, 'style_checker_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:style_checker_cmd" /></td>
            </s:tr>

            <%@expand ORIG_ENV "style_checker_env" "Compiling" "Style checker environment" %>
            <%@expand ORIG_ENV "lang_compiler_env" "Compiling" "Compiler environment" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-source_header-div">
                <td>Source header file:</td>
                <td><%
    str_value = prob->source_header;
    if (!str_value[0]) str_value = 0;
%><s:textfield id="orig-source_header" readonly="readonly" name="param" value="prob->source_header" size="48" maxlength="1024" /><%
    if (prob_id <= 0) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!str_value) {
        if (!tmp_prob->source_header[0]) {
%>(<i>Default: none</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->source_header" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupCompilingDialog(event, 'source_header')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:source_header" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-source_footer-div">
                <td>Source footer file:</td>
                <td><%
    str_value = prob->source_footer;
    if (!str_value[0]) str_value = 0;
%><s:textfield id="orig-source_footer" readonly="readonly" name="param" value="prob->source_footer" size="48" maxlength="1024" checkExpr="> 0" /><%
    if (prob_id <= 0) {
      if (!str_value) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!str_value) {
        if (!tmp_prob->source_footer[0]) {
%>(<i>Default: none</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->source_footer" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupCompilingDialog(event, 'source_footer')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:source_footer" /></td>
            </s:tr>

        </table>
    </div>


    <h3>Running</h3>

    <div>
        <table border="0" onclick="popupRunningDialog()">
            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_testing" "Running" "Disable any testing of submissions" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_auto_testing" "Running" "Disable automatic testing of submissions" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "enable_compilation" "Running" "Still compile runs to mark as ACCEPTED" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "manual_checking" "Running" "Problem is checked manually" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "check_presentation" "Running" "Check output presentation anyway" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "use_stdin" "Running" "Use standard input" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "combined_stdin" "Running" "Combined standard/file input" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-input_file-div">
                <td>Input file name:</td>
                <td><%
    if (!sup_prob) {
      const unsigned char *value = prob->input_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-input_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Not set</i>)<% } %><%
    } else {
      const unsigned char *value = prob->input_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-input_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Default</i>: <i><s:v value="tmp_prob->input_file" /></i>)<% } %><%
    }
%></td>
                <td><input type="button" onclick="popupRunningDialog(event, 'input_file')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:input_file" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "use_stdout" "Running" "Use standard output" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "combined_stdout" "Running" "Combined standard/file output" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-output_file-div">
                <td>Output file name:</td>
                <td><%
    if (!sup_prob) {
      const unsigned char *value = prob->output_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-output_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Not set</i>)<% } %><%
    } else {
      const unsigned char *value = prob->output_file;
      if (value && value[0] < ' ') value = 0;
%><s:textfield id="orig-output_file" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><% if (!value) { %>(<i>Default</i>: <i><s:v value="tmp_prob->output_file" /></i>)<% } %><%
    }
%></td>
                <td><input type="button" onclick="popupRunningDialog(event, 'output_file')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:output_file" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_stderr" "Running" "Consider output to stderr as PE" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "ignore_exit_code" "Running" "Ignore exit code" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-start_cmd-div">
                <td>Start proxy program:</td>
                <td><%
%><s:textfield id="orig-start_cmd" readonly="readonly" name="param" value="prob->start_cmd" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!prob->start_cmd) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (!prob->start_cmd) {
        if (!tmp_prob->start_cmd || !tmp_prob->start_cmd[0]) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->start_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupRunningDialog(event, 'start_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:start_cmd" /></td>
            </s:tr>

            <%@expand ORIG_ENV "start_env" "Running" "Start environment" %>

        </table>
    </div>

    <h3>Limits</h3>

    <div>
        <table border="0" onclick="popupLimitsDialog()">

<%
  prepare_set_prob_value(CNTSPROB_time_limit, tmp_prob, sup_prob, global);
  prepare_set_prob_value(CNTSPROB_time_limit_millis, tmp_prob, sup_prob, global);
%>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-time_limit_millis-div">
                <td>Processor time limit (ms):</td>
                <td><s:textfield id="orig-time_limit_millis" readonly="readonly" name="param" value="prob->time_limit_millis" size="48" maxlength="1024" checkExpr=" > 0" /><%
    if (prob_id <= 0) {
      if (prob->time_limit_millis <= 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      if (prob->time_limit_millis <= 0 && tmp_prob->time_limit_millis <= 0) {
%>(<i>Not set</i>)<%
      } else if (prob->time_limit_millis <= 0) {
%>(<i>Default: <s:v value="tmp_prob->time_limit_millis" /></i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:time_limit_millis" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-time_limit-div">
                <td>Processor time limit (s):</td>
                <td><s:textfield id="orig-time_limit" readonly="readonly" name="param" value="prob->time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      if (prob->time_limit < 0 && tmp_prob->time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->time_limit < 0 && !tmp_prob->time_limit) {
%>(<i>Default: Unlimited</i>)<%
      } else if (prob->time_limit < 0) {
%>(<i>Default: <s:v value="tmp_prob->time_limit" /></i>)<%
      } else if (!prob->time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:time_limit" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-real_time_limit-div">
                <td>Real time limit (s):</td>
                <td><s:textfield id="orig-real_time_limit" readonly="readonly" name="param" value="prob->real_time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_real_time_limit, tmp_prob, sup_prob, global);
      if (prob->real_time_limit < 0 && tmp_prob->real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->real_time_limit < 0 && !tmp_prob->real_time_limit) {
%>(<i>Default: Unlimited</i>)<%
      } else if (prob->real_time_limit < 0) {
%>(<i>Default: <s:v value="tmp_prob->real_time_limit" /></i>)<%
      } else if (!prob->real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:real_time_limit" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-max_vm_size-div">
                <td>Maximum virtual memory size:</td>
                <td><%
    num_buf[0] = 0;
    if (prob->max_vm_size == ~(size_t) 0 && prob_id <= 0) {
      snprintf(num_buf, sizeof(num_buf), "%d", -1);
    } else if (prob->max_vm_size != ~(size_t) 0) {
      size_t_to_size_str(num_buf, sizeof(num_buf), prob->max_vm_size);
    }
%><s:textfield id="orig-max_vm_size" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="no" /><%
    if (prob_id <= 0) {
      if (prob->max_vm_size == ~(size_t) 0 || prob->max_vm_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_vm_size, tmp_prob, sup_prob, global);
      if (prob->max_vm_size == ~(size_t) 0) {
        if (tmp_prob->max_vm_size == ~(size_t) 0) {
%>(<i>Default: unlimited</i>)<%
        } else if (tmp_prob->max_vm_size == 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
          size_t_to_size_str(num_buf, sizeof(num_buf), tmp_prob->max_vm_size);
%>(<i>Default: <s:v value="num_buf" escape="false"/></i>)<%
        }
      } else if (prob->max_vm_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:max_vm_size" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-max_stack_size-div">
                <td>Maximum stack size:</td>
                <td><%
    num_buf[0] = 0;
    if (prob->max_stack_size == ~(size_t) 0 && prob_id <= 0) {
      snprintf(num_buf, sizeof(num_buf), "%d", -1);
    } else if (prob->max_stack_size != ~(size_t) 0) {
      size_t_to_size_str(num_buf, sizeof(num_buf), prob->max_stack_size);
    }
%><s:textfield id="orig-max_stack_size" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="no" /><%
    if (prob_id <= 0) {
      if (prob->max_stack_size == ~(size_t) 0 || prob->max_stack_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_stack_size, tmp_prob, sup_prob, global);
      if (prob->max_stack_size == ~(size_t) 0) {
        if (tmp_prob->max_stack_size == ~(size_t) 0) {
%>(<i>Default: unlimited</i>)<%
        } else if (tmp_prob->max_stack_size == 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
          size_t_to_size_str(num_buf, sizeof(num_buf), tmp_prob->max_stack_size);
%>(<i>Default: <s:v value="num_buf" escape="false"/></i>)<%
        }
      } else if (prob->max_stack_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:max_stack_size" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-max_file_size-div">
                <td>Maximum output file size:</td>
                <td><%
    num_buf[0] = 0;
    if (prob->max_file_size == ~(size_t) 0 && prob_id <= 0) {
      snprintf(num_buf, sizeof(num_buf), "%d", -1);
    } else if (prob->max_file_size != ~(size_t) 0) {
      size_t_to_size_str(num_buf, sizeof(num_buf), prob->max_file_size);
    }
%><s:textfield id="orig-max_file_size" readonly="readonly" name="param" value="num_buf" size="48" maxlength="1024" check="no" /><%
    if (prob_id <= 0) {
      if (prob->max_file_size == ~(size_t) 0 || prob->max_file_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_file_size, tmp_prob, sup_prob, global);
      if (prob->max_file_size == ~(size_t) 0) {
        if (tmp_prob->max_file_size == ~(size_t) 0) {
%>(<i>Default: OS Limit</i>)<%
        } else if (tmp_prob->max_file_size == 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
          size_t_to_size_str(num_buf, sizeof(num_buf), tmp_prob->max_file_size);
%>(<i>Default: <s:v value="num_buf" escape="false"/></i>)<%
        }
      } else if (prob->max_file_size == 0) {
%>(<i>OS Limit</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:max_file_size" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-max_open_file_count-div">
                <td>Maximum open file count:</td>
                <td><s:textfield id="orig-max_open_file_count" readonly="readonly" name="param" value="prob->max_open_file_count" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->max_open_file_count < 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_open_file_count, tmp_prob, sup_prob, global);
      if (prob->max_open_file_count < 0) {
        if (tmp_prob->max_open_file_count < 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->max_open_file_count" /></i>)<%
        }
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:max_open_file_count" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-max_process_count-div">
                <td>Maximum process count:</td>
                <td><s:textfield id="orig-max_process_count" readonly="readonly" name="param" value="prob->max_process_count" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->max_process_count < 0) {
%>(<i>OS Limit</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_max_process_count, tmp_prob, sup_prob, global);
      if (prob->max_process_count < 0) {
        if (tmp_prob->max_process_count < 0) {
%>(<i>Default: OS Limit</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->max_process_count" /></i>)<%
        }
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:max_process_count" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-umask-div">
                <td>Umask value:</td>
                <td><s:textfield id="orig-umask" readonly="readonly" name="param" value="prob->umask" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupLimitsDialog(event, 'umask')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:umask" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "enable_process_group" "Limits" "Use separate process group" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_security" "Limits" "Disable security restrictions" %>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-lang_time_adj-div">
                <td>Language-specific time-limit adjustment (s):</td>
                <td><%
    unsigned char *strs = 0;
    if (prob->lang_time_adj && prob->lang_time_adj[0]) strs = sarray_unparse(prob->lang_time_adj);
%><s:textfield id="orig-lang_time_adj" name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupLimitsDialog(event, 'lang_time_adj')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:lang_time_adj" /></td>
            </s:tr>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-lang_time_adj_millis-div">
                <td>Language-specific time-limit adjustment (ms):</td>
                <td><%
    unsigned char *strs = 0;
    if (prob->lang_time_adj_millis && prob->lang_time_adj_millis[0]) strs = sarray_unparse(prob->lang_time_adj_millis);
%><s:textfield id="orig-lang_time_adj_millis" name="param" name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupLimitsDialog(event, 'lang_time_adj_millis')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:lang_time_adj_millis" /></td>
            </s:tr>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-lang_max_vm_size-div">
                <td>Language-specific memory limit:</td>
                <td><%
    unsigned char *strs = 0;
    if (prob->lang_max_vm_size && prob->lang_max_vm_size[0]) strs = sarray_unparse(prob->lang_max_vm_size);
%><s:textfield id="orig-lang_max_vm_size" name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupLimitsDialog(event, 'lang_max_vm_size')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:lang_max_vm_size" /></td>
            </s:tr>
<%
    xfree(strs); strs = 0;
  }
%>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-lang_max_stack_size-div">
                <td>Language-specific stack limit:</td>
                <td><%
    unsigned char *strs = 0;
    if (prob->lang_max_stack_size && prob->lang_max_stack_size[0]) strs = sarray_unparse(prob->lang_max_stack_size);
%><s:textfield id="orig-lang_max_stack_size" name="param" name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupLimitsDialog(event, 'lang_max_stack_size')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:lang_max_stack_size" /></td>
            </s:tr>
<%
    xfree(strs); strs = 0;
  }
%>




        </table>
    </div>

    <h3>Checking, interacting, evaluating</h3>

    <div>
        <table border="0" onclick="popupCheckingDialog()">
<%
  {
    const struct std_checker_info *std_checkers = super_html_std_checkers;
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-standard_checker-div">
                <td>Standard checker:</td>
                <td><s:hidden id="orig-standard_checker" name="param" value="prob->standard_checker" checkExpr="" /><%
    int j;
    for (j = 0; std_checkers[j].name; ++j) {
      if (!strcmp(prob->standard_checker, std_checkers[j].name)) {
%><s:v value="std_checkers[j].desc" /> - <%
      }
    }
%><tt><s:v value="prob->standard_checker" /></tt></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:standard_checker" /></td>
            </s:tr>
<%
  }
%>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-check_cmd-div">
                <td>Checker name:</td>
                <td><%
    const unsigned char *value = prob->check_cmd;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield id="orig-check_cmd" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_check_cmd, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->check_cmd[0] || tmp_prob->check_cmd[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->check_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'check_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:check_cmd" /></td>
            </s:tr>
<%
  }
%>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-checker_real_time_limit-div">
                <td>Real time limit for checker(s):</td>
                <td><s:textfield id="orig-checker_real_time_limit" readonly="readonly" name="param" value="prob->checker_real_time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->checker_real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->checker_real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_checker_real_time_limit, tmp_prob, sup_prob, global);
      if (prob->checker_real_time_limit < 0 && tmp_prob->checker_real_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->checker_real_time_limit < 0 && !tmp_prob->checker_real_time_limit) {
%>(<i>Default: Unlimited</i>)<%
      } else if (prob->checker_real_time_limit < 0) {
%>(<i>Default: <s:v value="tmp_prob->checker_real_time_limit" /></i>)<%
      } else if (!prob->checker_real_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:checker_real_time_limit" /></td>
            </s:tr>

            <%@expand ORIG_ENV "checker_env" "Checking" "Checker environment" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "scoring_checker" "Checking" "Checker calculates score" %>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-valuer_cmd-div">
                <td>Score valuer name:</td>
                <td><%
    const unsigned char *value = prob->valuer_cmd;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield id="orig-valuer_cmd" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_valuer_cmd, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->valuer_cmd[0] || tmp_prob->valuer_cmd[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->valuer_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'valuer_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:valuer_cmd" /></td>
            </s:tr>
<%
  }
%>

            <%@expand ORIG_INHERITABLE_BOOLEAN "valuer_sets_marked" "Checking" "Valuer sets <i>marked</i> flag" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "interactive_valuer" "Checking" "Valuer works interactively" %>
            <%@expand ORIG_ENV "valuer_env" "Checking" "Valuer environment" %>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-interactor_cmd-div">
                <td>Interactor name:</td>
                <td><%
    const unsigned char *value = prob->interactor_cmd;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield id="orig-interactor_cmd" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_interactor_cmd, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->interactor_cmd[0] || tmp_prob->interactor_cmd[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->interactor_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'interactor_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:interactor_cmd" /></td>
            </s:tr>
<%
  }
%>

            <%@expand ORIG_ENV "interactor_env" "Checking" "Interactor environment" %>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-interactor_time_limit-div">
                <td>Time limit for interactor (s):</td>
                <td><s:textfield id="orig-interactor_time_limit" readonly="readonly" name="param" value="prob->interactor_time_limit" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0 || !sup_prob) {
      if (prob->interactor_time_limit < 0) {
%>(<i>Not set</i>)<%
      } else if (!prob->interactor_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_interactor_time_limit, tmp_prob, sup_prob, global);
      if (prob->interactor_time_limit < 0) {
        if (tmp_prob->interactor_time_limit < 0) {
%>(<i>Not set</i>)<%
        } else if (!tmp_prob->interactor_time_limit) {
%>(<i>Default: unlimited</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->interactor_time_limit" /></i>)<%
        }
      } else if (!prob->interactor_time_limit) {
%>(<i>Unlimited</i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:interactor_time_limit" /></td>
            </s:tr>
<%
  }
%>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-init_cmd-div">
                <td>Init-style interactor name:</td>
                <td><%
%><s:textfield id="orig-init_cmd" readonly="readonly" name="param" value="prob->init_cmd" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!prob->init_cmd) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_init_cmd, tmp_prob, sup_prob, global);
      if (!prob->init_cmd) {
        if (!tmp_prob->init_cmd || !tmp_prob->init_cmd[0]) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->init_cmd" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupCheckingDialog(event, 'init_cmd')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:init_cmd" /></td>
            </s:tr>
<%
  }
%>

            <%@expand ORIG_ENV "init_env" "Checking" "Init-style interactor environment" %>

        </table>
    </div>

    <h3>Scoring</h3>

    <div>
        <table border="0" onclick="popupScoringDialog()">

            <%@expand ORIG_INHERITABLE_BOOLEAN "ignore_compile_errors" "Scoring" "Ignore compilation errors" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "use_ac_not_ok" "Scoring" "Use PR (pending review) status instead of OK" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-ok_status-div">
                <td>Success status:</td>
                <td><s:textfield id="orig-ok_status" readonly="readonly" name="param" value="prob->ok_status" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupScoringDialog(event, 'ok_status')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:ok_status" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "ignore_prev_ac" "Scoring" "Mark previous PR as IG (ignored)" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "olympiad_mode" "Scoring" "Use Olympiad mode" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "score_latest" "Scoring" "Score the latest submit" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "score_latest_or_unmarked" "Scoring" "Score the latest or the best unmarked" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "score_latest_marked" "Scoring" "Score the latest marked submit" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "ignore_unmarked" "Scoring" "Ignore unmarked runs in scoring" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "score_tokenized" "Scoring" "Score only tokenized submits" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-full_score-div">
                <td>Score for full solution:</td>
                <td><s:textfield id="orig-full_score" readonly="readonly" name="param" value="prob->full_score" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->full_score < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_full_score, tmp_prob, sup_prob, global);
      if (prob->full_score < 0) {
        if (tmp_prob->full_score < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->full_score" /></i>)<%
        }
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:full_score" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-full_user_score-div">
                <td>Score for user-visible full solution:</td>
                <td><s:textfield id="orig-full_user_score" readonly="readonly" name="param" value="prob->full_user_score" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->full_user_score < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_full_user_score, tmp_prob, sup_prob, global);
      if (prob->full_user_score < 0) {
        if (tmp_prob->full_user_score < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->full_user_score" /></i>)<%
        }
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:full_user_score" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "variable_full_score" "Scoring" "Allow variable score for full solution" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_score-div">
                <td>Default score for 1 passed test:</td>
                <td><s:textfield id="orig-test_score" readonly="readonly" name="param" value="prob->test_score" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->test_score < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_test_score, tmp_prob, sup_prob, global);
      if (prob->test_score < 0) {
        if (tmp_prob->test_score < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->test_score" /></i>)<%
        }
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_score" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-run_penalty-div">
                <td>Penalty for a submission:</td>
                <td><s:textfield id="orig-run_penalty" readonly="readonly" name="param" value="prob->run_penalty" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->run_penalty < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_run_penalty, tmp_prob, sup_prob, global);
      if (prob->run_penalty < 0) {
        if (tmp_prob->run_penalty < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->run_penalty" /></i>)<%
        }
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:run_penalty" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-disqualified_penalty-div">
                <td>Penalty for a disqualified submission:</td>
                <td><s:textfield id="orig-disqualified_penalty" readonly="readonly" name="param" value="prob->disqualified_penalty" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->disqualified_penalty < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_disqualified_penalty, tmp_prob, sup_prob, global);
      if (prob->disqualified_penalty < 0) {
        if (tmp_prob->disqualified_penalty < 0) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->disqualified_penalty" /></i>)<%
        }
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:disqualified_penalty" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_score_list-div">
                <td>Test scores for tests:</td>
                <td><s:textfield id="orig-test_score_list-div" readonly="readonly" name="param" value="prob->test_score_list" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupScoringDialog(event, 'test_score_list')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_score_list" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-acm_run_penalty-div">
                <td>Penalty for a submission (minutes):</td>
                <td><s:textfield id="orig-acm_run_penalty" readonly="readonly" name="param" value="prob->acm_run_penalty" size="48" maxlength="1024" checkExpr=" >= 0" /><%
    if (prob_id <= 0) {
      if (prob->acm_run_penalty < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_acm_run_penalty, tmp_prob, sup_prob, global);
      if (prob->acm_run_penalty < 0 && tmp_prob->acm_run_penalty < 0) {
%>(<i>Not set</i>)<%
      } else if (prob->acm_run_penalty < 0) {
%>(<i>Default: <s:v value="tmp_prob->acm_run_penalty" /></i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:acm_run_penalty" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-score_tests-div">
                <td>Tests for problem scores:</td>
                <td><s:textfield id="orig-score_tests" readonly="readonly" name="param" value="prob->score_tests" size="48" maxlength="1024" check="no" /></td>
                <td><input type="button" onclick="popupScoringDialog(event, 'score_tests')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:score_tests" /></td>
            </s:tr>

<%
  {
    unsigned char *strs = 0;
    if (prob->test_sets && prob->test_sets[0]) strs = sarray_unparse_2(prob->test_sets);
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-test_sets-div">
                <td>Specially scored test sets:</td>
                <td><s:textfield id="orig-test_sets" readonly="readonly" name="param" value="strs" size="48" maxlength="1024" checkExpr="" /><%
    if (!strs) {
%>(<i>Not set</i>)<%
}
%></td>
                <td><input type="button" onclick="popupScoringDialog(event, 'test_sets')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:test_sets" /></td>
            </s:tr>
<%
    xfree(strs);
  }
%>

<%
  {
    const unsigned char *value = prob->score_bonus;
    if (value && value[0] == 1) value = 0;
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-score_bonus-div">
                <td>Additional score bonus:</td>
                <td><s:textfield id="orig-score_bonus" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0) {
      if (!value) {
%>(<i>Not set</i>)<%
      } else if (!*value) {
%>(<i>Empty</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_score_bonus, tmp_prob, sup_prob, global);
      if (!value) {
        if (!tmp_prob->score_bonus[0] || tmp_prob->score_bonus[0] == 1) {
%>(<i>Not set</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->score_bonus" /></i>)<%
        }
      } else if (!*value) {
%>(<i>Empty</i>)<%
      }
    }
%></td>
                <td><input type="button" onclick="popupScoringDialog(event, 'score_bonus')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:score_bonus" /></td>
            </s:tr>
<%
  }
%>

        </table>
    </div>

    <h3>Feedback</h3>

    <div>
        <table border="0" onclick="popupFeedbackDialog()">

            <%@expand ORIG_INHERITABLE_BOOLEAN "team_enable_rep_view" "Feedback" "Contestant may view testing protocol" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "team_enable_ce_view" "Feedback" "Contestant may view compilation errors" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "team_show_judge_report" "Feedback" "Contestant may view FULL testing protocol" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "show_checker_comment" "Feedback" "Contestant may view checker comment" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-open_tests-div">
                <td>Tests open for participants:</td>
                <td><s:textfield id="orig-open_tests" readonly="readonly" name="param" value="prob->open_tests" size="48" maxlength="1024" check="no" /></td>
                <td><input type="button" onclick="popupFeedbackDialog(event, 'open_tests')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:open_tests" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-final_open_tests-div">
                <td>Tests open for participants finally:</td>
                <td><s:textfield id="orig-final_open_tests" readonly="readonly" name="param" value="prob->final_open_tests" size="48" maxlength="1024" check="no" /></td>
                <td><input type="button" onclick="popupFeedbackDialog(event, 'final_open_tests')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:final_open_tests" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "enable_tokens" "Feedback" "Enable tokens" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "tokens_for_user_ac" "Feedback" "Tokens only for user AC submits" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-tokens-div">
                <td>Token specification:</td>
                <td><s:textfield id="orig-tokens" readonly="readonly" name="param" value="prob->tokens" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupFeedbackDialog(event, 'tokens')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="serve.cfg:problem:tokens" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-token_open_tests-div">
                <td>Tests open for tokens:</td>
                <td><s:textfield id="orig-token_open_tests" readonly="readonly" name="param" value="prob->token_open_tests" size="48" maxlength="1024" check="" /></td>
                <td><input type="button" onclick="popupFeedbackDialog(event, 'token_open_tests')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="serve.cfg:problem:token_open_tests" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-tests_to_accept-div">
                <td>Number of accept tests:</td>
                <td><s:textfield id="orig-tests_to_accept" readonly="readonly" name="param" value="prob->tests_to_accept" size="48" maxlength="1024" checkExpr=">= 0" /><%
    if (prob_id <= 0) {
      if (prob->tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_tests_to_accept, tmp_prob, sup_prob, global);
      if (prob->tests_to_accept < 0 && tmp_prob->tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      } else {
%>(<i>Default: <s:v value="tmp_prob->tests_to_accept" /></i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:tests_to_accept" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "accept_partial" "Feedback" "Accept for testing solutions that do not pass all accept tests" %>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-min_tests_to_accept-div">
                <td>Min. number of accept tests:</td>
                <td><s:textfield id="orig-min_tests_to_accept" readonly="readonly" name="param" value="prob->min_tests_to_accept" size="48" maxlength="1024" checkExpr=">= 0" /><%
    if (prob_id <= 0) {
      if (prob->min_tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_min_tests_to_accept, tmp_prob, sup_prob, global);
      if (prob->min_tests_to_accept < 0 && tmp_prob->min_tests_to_accept < 0) {
%>(<i>Not set</i>)<%
      } else {
%>(<i>Default: <s:v value="tmp_prob->min_tests_to_accept" /></i>)<%
      }
    }
%></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:min_tests_to_accept" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_pe" "Feedback" "Report Presentation Error as Wrong Answer" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "disable_wtl" "Feedback" "Report Wall Time Limit Exceeded as Time Limit Exceeded" %>

        </table>
    </div>


    <h3>Standings</h3>

    <div>
        <table border="0" onclick="popupStandingDialog()">
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-stand_name-div">
                <td>Title for the standings column:</td>
                <td><s:textfield id="orig-stand_name" readonly="readonly" name="param" value="prob->stand_name" size="48" maxlength="1024" check="no" /><% if (!prob->stand_name) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupStandingDialog(event, 'stand_name')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:stand_name" /></td>
            </s:tr>

            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-stand_column-div">
                <td>Collate this problem with the specified one:</td>
                <td><s:textfield id="orig-stand_column" readonly="readonly" name="param" value="prob->stand_column" size="48" maxlength="1024" check="no" /><% if (!prob->stand_column) { %>(<i>Not set</i>)<% } %></td>
                <td><input type="button" onclick="popupStandingDialog(event, 'stand_column')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:stand_column" /></td>
            </s:tr>

            <%@expand ORIG_INHERITABLE_BOOLEAN "hidden" "Standing" "Do not show this problem in standings" %>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-stand_hide_time-div">
                <td>Do not show accept time for this problem?</td>
                <td><%
    int value = (prob->stand_hide_time > 0);
%><s:yesno id="orig-stand_hide_time" readonly="readonly" name="param" value="value" /></td>
                <td>&nbsp;</td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:stand_hide_time" /></td>
            </s:tr>
<%
  }
%>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-stand_attr-div">
                <td>Standings attributes:</td>
                <td><%
    const unsigned char *value = prob->stand_attr;
    if (value && (!value[0] || value[0] == 1)) value = 0;
%><s:textfield id="orig-stand_attr" readonly="readonly" name="param" value="value" size="48" maxlength="1024" checkExpr="" /><%
    if (prob_id <= 0 || !sup_prob) {
      if (!value) {
%>(<i>Not set</i>)<%
      }
    } else {
      prepare_set_prob_value(CNTSPROB_stand_attr, tmp_prob, sup_prob, global);
      if (!value) {
        if (tmp_prob->stand_attr[0] == 1) {
%>(<i>Not set</i>)<%
        } else if (!tmp_prob->stand_attr[0]) {
%>(<i>Default: empty</i>)<%
        } else {
%>(<i>Default: <s:v value="tmp_prob->stand_attr" /></i>)<%
        }
      }
    }
%></td>
                <td><input type="button" onclick="popupStandingDialog(event, 'stand_attr')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:stand_attr" /></td>
            </s:tr>
<%
  }
%>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-score_view-div">
                <td>Special view for scores:</td>
                <td><%
    unsigned char *strs = 0;
    if (prob->score_view && prob->score_view[0]) strs = sarray_unparse(prob->score_view);
%><s:textfield id="orig-score_view" readonly="readonly" name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupStandingDialog(event, 'score_view')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:score_view" /></td>
            </s:tr>
<%
    xfree(strs); strs = 0;
  }
%>

            <%@expand ORIG_INHERITABLE_BOOLEAN "stand_ignore_score" "Standing" "Ignore problem score in standings" %>
            <%@expand ORIG_INHERITABLE_BOOLEAN "stand_last_column" "Standing" "Show the problem after all results" %>

<%
  {
%>
            <s:tr attr="form_row_attrs[row ^= 1]" id="orig-provide_ok-div">
                <td>Provide OK to problems:</td>
                <td><%
    unsigned char *strs = 0;
    if (prob->provide_ok && prob->provide_ok[0]) strs = sarray_unparse(prob->provide_ok);
%><s:textfield id="orig-provide_ok" readonly="readonly" name="param" value="strs" size="48" maxlength="1024" checkExpr="" /></td>
                <td><input type="button" onclick="popupStandingDialog(event, 'provide_ok')" value="Clear" /></td>
                <td onclick="np(event);"><s:help topic="Serve.cfg:problem:provide_ok" /></td>
            </s:tr>
<%
    xfree(strs); strs = 0;
  }
%>


        </table>
    </div>


<%
  if (prob->unhandled_vars) {
%>
    <h3>Uneditable parameters</h3>

    <div>
        <table border="0">
            <s:tr attr="form_row_attrs[row ^= 1]">
                <td colspan="4"><pre><s:v value="prob->unhandled_vars" /></pre></td>
            </s:tr>
        </table>
    </div>
<%
  }
%>

</div>

<%
bottom_links: ;
%>

<%@include "cnts_edit_cur_bottom_menu.csp"
%>

<%@include "footer.csp"
%><%
cleanup:
  xfree(alloc_value);
  tmp_prob = prepare_problem_free(tmp_prob);
  l10n_resetlocale();
  html_armor_free(&ab);
%>
